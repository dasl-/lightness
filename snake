#!/usr/bin/python3
import argparse
from pifi.settings.snakesettings import SnakeSettings
from pifi.games.snake import Snake
from pifi.games.gamecolorhelper import GameColorHelper

def parseArgs():
    parser = argparse.ArgumentParser(description="Snake game")
    parser.add_argument('--display-width', dest='display_width', action='store', type=int,
        default=SnakeSettings.DEFAULT_DISPLAY_WIDTH, metavar='N', help='Number of pixels / units')
    parser.add_argument('--display-height', dest='display_height', action='store', type=int,
        default=SnakeSettings.DEFAULT_DISPLAY_HEIGHT, metavar='N', help='Number of pixels / units')
    parser.add_argument('--flip-x', dest='flip_x', action='store_true', default=False,
        help='flip X direction output')
    parser.add_argument('--flip-y', dest='flip_y', action='store_true', default=False,
        help='flip Y direction output')
    parser.add_argument('--brightness', dest='brightness', action='store', type=int, default=SnakeSettings.DEFAULT_BRIGHTNESS,
        metavar='N', help='Global brightness value. Max of 31.')
    parser.add_argument('--tick-sleep', dest='tick_sleep', action='store', type=float,
        default=SnakeSettings.DEFAULT_TICK_SLEEP, metavar='N',
        help='Amount to sleep after each tick in seconds. Default: {} s'.format(SnakeSettings.DEFAULT_TICK_SLEEP))

    game_color_mode_help_str = ''
    for mode in GameColorHelper.GAME_COLOR_MODES:
        game_color_mode_help_str += "'{}', ".format(mode)
    game_color_mode_help_str += "or '{}'".format(GameColorHelper.GAME_COLOR_MODE_RANDOM)
    parser.add_argument('--game-color-mode', dest='game_color_mode', action='store', default=GameColorHelper.GAME_COLOR_MODE_RANDOM,
        help=("one of: {}. Default is '{}'."
            .format(game_color_mode_help_str, GameColorHelper.GAME_COLOR_MODE_RANDOM))
    )

    args = parser.parse_args()
    return args

args = parseArgs()
settings = SnakeSettings(
    display_width = args.display_width, display_height = args.display_height,
    brightness = args.brightness, flip_x = args.flip_x, flip_y = args.flip_y, log_level = None,
    tick_sleep = args.tick_sleep, game_color_mode = args.game_color_mode,
)
snake = Snake(settings)
snake.newGame()
